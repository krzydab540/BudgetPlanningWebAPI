{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\mojaaplikacja\\\\src\\\\Table13.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css'; //import React from \"react\";\n//import ReactDOM from \"react-dom\";\n\nimport { useFormik } from \"formik\";\nimport \"./styles.css\"; //let products = [];\n\nconst columns = [{\n  dataField: 'productID',\n  text: 'ID Produktu',\n  sort: true\n}, {\n  dataField: 'productName',\n  text: 'Nazwa Produktu',\n  sort: true\n}, {\n  dataField: 'productPrice',\n  text: 'Cena Produktu',\n  sort: true\n}]; //function addProducts(quantity) {\n//  const startId = products.length;\n//  for (let i = 0; i < quantity; i++) {\n//  const id = startId + i;\n//   products.push({\n//    productID: id,\n//    productName: 'Item name ' + id,\n//    productPrice: 2100 + i\n//   });\n// }\n// return products\n//}\n\nexport default function Fetcher({\n  url\n}) {\n  const [data, setData] = useState([null]);\n\n  const lightOn = () => setData(data => [...data, {\n    productID: 2,\n    productName: 'Item name ' + 1,\n    productPrice: 2100 + 4\n  }]);\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.productID) {\n      errors.productID = 'Required';\n    } else if (values.productID.length > 0) {\n      errors.productID = 'Must be more then 0';\n    }\n\n    if (!values.productName) {\n      errors.productName = 'Required';\n    } else if (values.productName.length > 3) {\n      errors.productName = 'Must be 3 characters or less';\n    }\n\n    if (!values.productPrice) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n  const SignupForm = () => {\n    const formik = useFormik({\n      initialValues: {\n        productID: \"\",\n        productName: \"\",\n        productPrice: \"\"\n      },\n      validate,\n      onSubmit: values => {\n        setData(data => [...data, {\n          productID: values.productID,\n          productName: values.productName,\n          productPrice: values.productPrice\n        }]);\n      } // onSubmit: values => {\n      //  alert(JSON.stringify(values, null, 2));\n      // }\n\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"productID\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"productID\",\n      name: \"productID\",\n      type: \"number\",\n      placeholder: \"ID produktu\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), formik.errors.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 36\n      }\n    }, formik.errors.firstName) : null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }\n    }, \"productName\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"productName\",\n      name: \"productName\",\n      type: \"text\",\n      placeholder: \"Nazwa produktu\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), formik.errors.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 35\n      }\n    }, formik.errors.lastName) : null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }, \"productPrice\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"productPrice\",\n      name: \"productPrice\",\n      type: \"number\",\n      placeholder: \"Cena produktu\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 32\n      }\n    }, formik.errors.email) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }; //data.push({ //productID: 2,\n  //productName: 'Item name ' + 1,\n  //productPrice: 2100 + 4\n  //   });\n\n\n  useEffect(() => {\n    // Start it off by assuming the component is still mounted\n    let mounted = true;\n\n    const loadData = async () => {\n      const response = await Axios.get('https://localhost:44351/api/Products'); // We have a response, but let's first check if component is still mounted\n\n      if (mounted) {\n        setData(response.data);\n      }\n    };\n\n    loadData();\n    return () => {\n      // When cleanup is called, toggle the mounted variable to false\n      mounted = false;\n    };\n  }, [url]);\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }\n    }, \"Loading data from \", url);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    class: \"table table-bordered table-striped text-center\",\n    bootstrap4: true,\n    keyField: \"id\",\n    data: data,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: lightOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 2\n    }\n  }, \"On\"), \" \", /*#__PURE__*/React.createElement(SignupForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 40\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/filip/mojaaplikacja/src/Table13.js"],"names":["React","useState","useEffect","Axios","BootstrapTable","useFormik","columns","dataField","text","sort","Fetcher","url","data","setData","lightOn","productID","productName","productPrice","validate","values","errors","length","email","test","SignupForm","formik","initialValues","onSubmit","handleSubmit","handleChange","firstName","lastName","mounted","loadData","response","get"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import React from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport \"./styles.css\";\r\n\r\n//let products = [];\r\n\r\nconst columns = [{\r\n  \r\n    dataField: 'productID',\r\n    text: 'ID Produktu',\r\n    sort: true\r\n  }, {\r\n    dataField: 'productName',\r\n    text: 'Nazwa Produktu',\r\n    sort: true\r\n  }, {\r\n    dataField: 'productPrice',\r\n    text: 'Cena Produktu',\r\n    sort: true\r\n  }];\r\n\r\n  //function addProducts(quantity) {\r\n  //  const startId = products.length;\r\n  //  for (let i = 0; i < quantity; i++) {\r\n  //  const id = startId + i;\r\n  //   products.push({\r\n  //    productID: id,\r\n  //    productName: 'Item name ' + id,\r\n  //    productPrice: 2100 + i\r\n  //   });\r\n\r\n  // }\r\n  // return products\r\n  //}\r\n\r\nexport default function Fetcher({ url }) {\r\n  const [data, setData] = useState([null]);\r\n   \r\n  const lightOn = () =>\r\n  setData(data =>  [...data, {productID: 2,\r\n    productName: 'Item name ' + 1,\r\n    productPrice: 2100 + 4} ])\r\n\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.productID) {\r\n        errors.productID = 'Required';\r\n      } else if (values.productID.length > 0) {\r\n        errors.productID = 'Must be more then 0';\r\n      }\r\n    \r\n      if (!values.productName) {\r\n        errors.productName = 'Required';\r\n      } else if (values.productName.length > 3) {\r\n        errors.productName = 'Must be 3 characters or less';\r\n      }\r\n    \r\n      if (!values.productPrice) {\r\n        errors.email = 'Required';\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n      }\r\n    \r\n      return errors;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const SignupForm = () => {\r\n    const formik = useFormik({\r\n      initialValues: { productID: \"\", productName: \"\", productPrice:\"\" }, validate,\r\n    \r\n      onSubmit: values =>{  setData(data =>  [...data, {productID: values.productID,\r\n      productName: values.productName,\r\n      productPrice: values.productPrice} ])  }\r\n     \r\n     \r\n     \r\n     // onSubmit: values => {\r\n      //  alert(JSON.stringify(values, null, 2));\r\n     // }\r\n    });\r\n    return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label htmlFor=\"productID\">productID</label>\r\n        <input\r\n          id=\"productID\"\r\n          name=\"productID\"\r\n          type=\"number\"\r\n          placeholder=\"ID produktu\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.errors.firstName ? <div>{formik.errors.firstName}</div> : null}\r\n         <label htmlFor=\"productName\">productName</label>\r\n        <input\r\n          id=\"productName\"\r\n          name=\"productName\"\r\n          type=\"text\"\r\n          placeholder=\"Nazwa produktu\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.errors.lastName ? <div>{formik.errors.lastName}</div> : null}\r\n         <label htmlFor=\"productPrice\">productPrice</label>\r\n        <input\r\n        id=\"productPrice\"\r\n          name=\"productPrice\"\r\n          type=\"number\"\r\n          placeholder=\"Cena produktu\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  //data.push({ //productID: 2,\r\n        //productName: 'Item name ' + 1,\r\n        //productPrice: 2100 + 4\r\n    //   });\r\n\r\n       \r\n  useEffect(\r\n    () => {\r\n      // Start it off by assuming the component is still mounted\r\n      let mounted = true;\r\n\r\n      const loadData = async () => {\r\n        const response = await Axios.get('https://localhost:44351/api/Products');\r\n        // We have a response, but let's first check if component is still mounted\r\n        if (mounted) {\r\n          setData(response.data);\r\n        }\r\n      };\r\n      loadData();\r\n\r\n      return () => {\r\n        // When cleanup is called, toggle the mounted variable to false\r\n        mounted = false;\r\n      };\r\n    },\r\n    [url]\r\n  );\r\n\r\n  if (!data) {\r\n    return <div>Loading data from {url}</div>;\r\n  }\r\n\r\n  return <div class=\"row justify-content-center\"><BootstrapTable class=\"table table-bordered table-striped text-center\" bootstrap4   keyField='id' data={data} columns={ columns } />\r\n <button onClick={lightOn}>On</button> <SignupForm/>\r\n  </div>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}