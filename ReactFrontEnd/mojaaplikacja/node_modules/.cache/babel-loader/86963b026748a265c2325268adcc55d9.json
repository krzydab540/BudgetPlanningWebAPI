{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\mojaaplikacja\\\\src\\\\Table13.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css'; //import React from \"react\";\n//import ReactDOM from \"react-dom\";\n\nimport { useFormik } from \"formik\";\nimport \"./styles.css\"; //let products = [];\n\nconst columns = [{\n  dataField: 'productID',\n  text: 'ID Produktu',\n  sort: true\n}, {\n  dataField: 'productName',\n  text: 'Nazwa Produktu',\n  sort: true\n}, {\n  dataField: 'productPrice',\n  text: 'Cena Produktu',\n  sort: true\n}]; //function addProducts(quantity) {\n//  const startId = products.length;\n//  for (let i = 0; i < quantity; i++) {\n//  const id = startId + i;\n//   products.push({\n//    productID: id,\n//    productName: 'Item name ' + id,\n//    productPrice: 2100 + i\n//   });\n// }\n// return products\n//}\n\nexport default function Fetcher({\n  url\n}) {\n  const [data, setData] = useState([null]); //const lightOn = () =>\n  //setData(data =>  [...data, {productID: 2,\n  // productName: 'Item name ' + 1,\n  // productPrice: 2100 + 4} ])\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.productID) {\n      errors.productID = 'Required';\n    } else if (values.productID.value > 0) {\n      errors.productID = 'Must be more then 0';\n    }\n\n    if (!values.productName) {\n      errors.productName = 'Required';\n    } else if (values.productName.length < 3) {\n      errors.productName = 'Must be 3 characters or more';\n    }\n\n    if (!values.productPrice) {\n      errors.productPrice = 'Required';\n    } else if (values.productPrice === Number) {\n      errors.productPrice = 'Must be number';\n    }\n\n    return errors;\n  };\n\n  const SignupForm = () => {\n    const formik = useFormik({\n      initialValues: {\n        productID: \"\",\n        productName: \"\",\n        productPrice: \"\"\n      },\n      validate,\n      onSubmit: values => {\n        setData(data => [...data, {\n          productID: values.productID,\n          productName: values.productName,\n          productPrice: values.productPrice\n        }]);\n        Axios.post(`https://localhost:44351/api/Products`, {\n          productID: values.productID,\n          productName: values.productName,\n          productPrice: values.productPrice\n        });\n        console.log(values.productID.type);\n      } // onSubmit: values => {\n      //  alert(JSON.stringify(values, null, 2));\n      // }\n\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \"productID\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"productID\",\n      name: \"productID\",\n      type: \"number\",\n      placeholder: \"ID produktu\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), formik.errors.productID ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 36\n      }\n    }, formik.errors.productID) : null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }, \"productName\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"productName\",\n      name: \"productName\",\n      type: \"text\",\n      placeholder: \"Nazwa produktu\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), formik.errors.productName ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 38\n      }\n    }, formik.errors.productName) : null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 10\n      }\n    }, \"productPrice\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"productPrice\",\n      name: \"productPrice\",\n      type: \"number\",\n      placeholder: \"Cena produktu\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), formik.errors.productPrice ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 39\n      }\n    }, formik.errors.productPrice) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }; //data.push({ //productID: 2,\n  //productName: 'Item name ' + 1,\n  //productPrice: 2100 + 4\n  //   });\n\n\n  useEffect(() => {\n    // Start it off by assuming the component is still mounted\n    let mounted = true;\n\n    const loadData = async () => {\n      const response = await Axios.get('https://localhost:44351/api/Products'); // We have a response, but let's first check if component is still mounted\n\n      if (mounted) {\n        setData(response.data);\n      }\n    };\n\n    loadData();\n    return () => {\n      // When cleanup is called, toggle the mounted variable to false\n      mounted = false;\n    };\n  }, [url]);\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 12\n      }\n    }, \"Loading data from \", url);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    class: \"table table-bordered table-striped text-center\",\n    bootstrap4: true,\n    keyField: \"id\",\n    data: data,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(SignupForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 2\n    }\n  }));\n} //<button onClick={lightOn}>On</button>","map":{"version":3,"sources":["C:/Users/filip/mojaaplikacja/src/Table13.js"],"names":["React","useState","useEffect","Axios","BootstrapTable","useFormik","columns","dataField","text","sort","Fetcher","url","data","setData","validate","values","errors","productID","value","productName","length","productPrice","Number","SignupForm","formik","initialValues","onSubmit","post","console","log","type","handleSubmit","handleChange","email","mounted","loadData","response","get"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import React from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport \"./styles.css\";\r\n\r\n//let products = [];\r\n\r\nconst columns = [{\r\n  \r\n    dataField: 'productID',\r\n    text: 'ID Produktu',\r\n    sort: true\r\n  }, {\r\n    dataField: 'productName',\r\n    text: 'Nazwa Produktu',\r\n    sort: true\r\n  }, {\r\n    dataField: 'productPrice',\r\n    text: 'Cena Produktu',\r\n    sort: true\r\n  }];\r\n\r\n  //function addProducts(quantity) {\r\n  //  const startId = products.length;\r\n  //  for (let i = 0; i < quantity; i++) {\r\n  //  const id = startId + i;\r\n  //   products.push({\r\n  //    productID: id,\r\n  //    productName: 'Item name ' + id,\r\n  //    productPrice: 2100 + i\r\n  //   });\r\n\r\n  // }\r\n  // return products\r\n  //}\r\n\r\nexport default function Fetcher({ url }) {\r\n  const [data, setData] = useState([null]);\r\n   \r\n  //const lightOn = () =>\r\n  //setData(data =>  [...data, {productID: 2,\r\n   // productName: 'Item name ' + 1,\r\n   // productPrice: 2100 + 4} ])\r\n\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.productID) {\r\n        errors.productID = 'Required';\r\n      } else if (values.productID.value > 0) {\r\n        errors.productID = 'Must be more then 0';\r\n      }\r\n    \r\n      if (!values.productName) {\r\n        errors.productName = 'Required';\r\n      } else if (values.productName.length < 3) {\r\n        errors.productName = 'Must be 3 characters or more';\r\n      }\r\n    \r\n      if (!values.productPrice) {\r\n        errors.productPrice = 'Required';\r\n      } else if (values.productPrice === Number) {\r\n        errors.productPrice = 'Must be number';\r\n      }\r\n    \r\n      return errors;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const SignupForm = () => {\r\n    const formik = useFormik({\r\n      initialValues: { productID: \"\", productName: \"\", productPrice:\"\" }, validate,\r\n    \r\n      onSubmit: values =>{  setData(data =>  [...data, {productID: values.productID,\r\n      productName: values.productName,\r\n      productPrice: values.productPrice} ])\r\n      Axios.post(`https://localhost:44351/api/Products`,  \r\n        {productID: values.productID,\r\n      productName: values.productName,\r\n      productPrice: values.productPrice});\r\n      console.log(values.productID.type)\r\n      }\r\n     \r\n     // onSubmit: values => {\r\n      //  alert(JSON.stringify(values, null, 2));\r\n     // }\r\n    });\r\n    return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label htmlFor=\"productID\">productID</label>\r\n        <input\r\n          id=\"productID\"\r\n          name=\"productID\"\r\n          type=\"number\"\r\n          placeholder=\"ID produktu\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.errors.productID ? <div>{formik.errors.productID}</div> : null}\r\n         <label htmlFor=\"productName\">productName</label>\r\n        <input\r\n          id=\"productName\"\r\n          name=\"productName\"\r\n          type=\"text\"\r\n          placeholder=\"Nazwa produktu\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.errors.productName ? <div>{formik.errors.productName}</div> : null}\r\n         <label htmlFor=\"productPrice\">productPrice</label>\r\n        <input\r\n        id=\"productPrice\"\r\n          name=\"productPrice\"\r\n          type=\"number\"\r\n          placeholder=\"Cena produktu\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.errors.productPrice ? <div>{formik.errors.productPrice}</div> : null}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  //data.push({ //productID: 2,\r\n        //productName: 'Item name ' + 1,\r\n        //productPrice: 2100 + 4\r\n    //   });\r\n\r\n       \r\n  useEffect(\r\n    () => {\r\n      // Start it off by assuming the component is still mounted\r\n      let mounted = true;\r\n\r\n      const loadData = async () => {\r\n        const response = await Axios.get('https://localhost:44351/api/Products');\r\n        // We have a response, but let's first check if component is still mounted\r\n        if (mounted) {\r\n          setData(response.data);\r\n        }\r\n      };\r\n      loadData();\r\n\r\n      return () => {\r\n        // When cleanup is called, toggle the mounted variable to false\r\n        mounted = false;\r\n      };\r\n    },\r\n    [url]\r\n  );\r\n\r\n  if (!data) {\r\n    return <div>Loading data from {url}</div>;\r\n  }\r\n\r\n  return <div class=\"row justify-content-center\"><BootstrapTable class=\"table table-bordered table-striped text-center\" bootstrap4   keyField='id' data={data} columns={ columns } />\r\n \r\n <SignupForm/>\r\n  </div>;\r\n}\r\n//<button onClick={lightOn}>On</button> \r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}