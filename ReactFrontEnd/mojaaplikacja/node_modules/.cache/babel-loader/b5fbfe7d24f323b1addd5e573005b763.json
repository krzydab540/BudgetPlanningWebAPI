{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\mojaaplikacja\\\\src\\\\Table13.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css'; //let products = [];\n\nconst columns = [{\n  dataField: 'productID',\n  text: 'ID Produktu',\n  sort: true\n}, {\n  dataField: 'productName',\n  text: 'Nazwa Produktu',\n  sort: true\n}, {\n  dataField: 'productPrice',\n  text: 'Cena Produktu',\n  sort: true\n}]; //function addProducts(quantity) {\n//  const startId = products.length;\n//  for (let i = 0; i < quantity; i++) {\n//  const id = startId + i;\n//   products.push({\n//    productID: id,\n//    productName: 'Item name ' + id,\n//    productPrice: 2100 + i\n//   });\n// }\n// return products\n//}\n\nexport default function Fetcher({\n  url\n}) {\n  const [data, setData] = useState(null);\n\n  const lightOn = () => setData(data => data + setData({\n    productID: 2,\n    productName: 'Item name ' + 1,\n    productPrice: 2100 + 4\n  })); //data.push({ //productID: 2,\n  //productName: 'Item name ' + 1,\n  //productPrice: 2100 + 4\n  //   });\n\n\n  useEffect(() => {\n    // Start it off by assuming the component is still mounted\n    let mounted = true;\n\n    const loadData = async () => {\n      const response = await Axios.get('https://localhost:44351/api/Products'); // We have a response, but let's first check if component is still mounted\n\n      if (mounted) {\n        setData(response.data);\n      }\n    };\n\n    loadData();\n    return () => {\n      // When cleanup is called, toggle the mounted variable to false\n      mounted = false;\n    };\n  }, [url]);\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    }, \"Loading data from \", url);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    class: \"table table-bordered table-striped text-center\",\n    bootstrap4: true,\n    keyField: \"id\",\n    data: data,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: lightOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 2\n    }\n  }, \"On\"));\n}","map":{"version":3,"sources":["C:/Users/filip/mojaaplikacja/src/Table13.js"],"names":["React","useState","useEffect","Axios","BootstrapTable","columns","dataField","text","sort","Fetcher","url","data","setData","lightOn","productID","productName","productPrice","mounted","loadData","response","get"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAO,gEAAP,C,CAGA;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAEbC,EAAAA,SAAS,EAAE,WAFE;AAGbC,EAAAA,IAAI,EAAE,aAHO;AAIbC,EAAAA,IAAI,EAAE;AAJO,CAAD,EAKX;AACDF,EAAAA,SAAS,EAAE,aADV;AAEDC,EAAAA,IAAI,EAAE,gBAFL;AAGDC,EAAAA,IAAI,EAAE;AAHL,CALW,EASX;AACDF,EAAAA,SAAS,EAAE,cADV;AAEDC,EAAAA,IAAI,EAAE,eAFL;AAGDC,EAAAA,IAAI,EAAE;AAHL,CATW,CAAhB,C,CAeE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEF,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA0B;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;;AAUA,QAAMY,OAAO,GAAG,MAChBD,OAAO,CAACD,IAAI,IAAIA,IAAI,GAAGC,OAAO,CAAC;AAACE,IAAAA,SAAS,EAAE,CAAZ;AAC7BC,IAAAA,WAAW,EAAE,eAAe,CADC;AAE7BC,IAAAA,YAAY,EAAE,OAAO;AAFQ,GAAD,CAAvB,CADP,CAXuC,CAgBvC;AACM;AACA;AACJ;;;AAGFd,EAAAA,SAAS,CACP,MAAM;AACJ;AACA,QAAIe,OAAO,GAAG,IAAd;;AAEA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,sCAAV,CAAvB,CAD2B,CAE3B;;AACA,UAAIH,OAAJ,EAAa;AACXL,QAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACD;AACF,KAND;;AAOAO,IAAAA,QAAQ;AAER,WAAO,MAAM;AACX;AACAD,MAAAA,OAAO,GAAG,KAAV;AACD,KAHD;AAID,GAlBM,EAmBP,CAACP,GAAD,CAnBO,CAAT;;AAsBA,MAAI,CAACC,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBD,GAAxB,CAAP;AACD;;AAED,sBAAO;AAAK,IAAA,KAAK,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwC,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,gDAAtB;AAAuE,IAAA,UAAU,MAAjF;AAAoF,IAAA,QAAQ,EAAC,IAA7F;AAAkG,IAAA,IAAI,EAAEC,IAAxG;AAA8G,IAAA,OAAO,EAAGN,OAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,eACR;AAAQ,IAAA,OAAO,EAAEQ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ,CAAP;AAGD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\n\r\n//let products = [];\r\n\r\nconst columns = [{\r\n  \r\n    dataField: 'productID',\r\n    text: 'ID Produktu',\r\n    sort: true\r\n  }, {\r\n    dataField: 'productName',\r\n    text: 'Nazwa Produktu',\r\n    sort: true\r\n  }, {\r\n    dataField: 'productPrice',\r\n    text: 'Cena Produktu',\r\n    sort: true\r\n  }];\r\n\r\n  //function addProducts(quantity) {\r\n  //  const startId = products.length;\r\n  //  for (let i = 0; i < quantity; i++) {\r\n  //  const id = startId + i;\r\n  //   products.push({\r\n  //    productID: id,\r\n  //    productName: 'Item name ' + id,\r\n  //    productPrice: 2100 + i\r\n  //   });\r\n\r\n  // }\r\n  // return products\r\n  //}\r\n\r\nexport default function Fetcher({ url }) {\r\n  const [data, setData] = useState(null);\r\n   \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  const lightOn = () =>\r\n  setData(data => data + setData({productID: 2,\r\n    productName: 'Item name ' + 1,\r\n    productPrice: 2100 + 4}))\r\n  \r\n  //data.push({ //productID: 2,\r\n        //productName: 'Item name ' + 1,\r\n        //productPrice: 2100 + 4\r\n    //   });\r\n\r\n       \r\n  useEffect(\r\n    () => {\r\n      // Start it off by assuming the component is still mounted\r\n      let mounted = true;\r\n\r\n      const loadData = async () => {\r\n        const response = await Axios.get('https://localhost:44351/api/Products');\r\n        // We have a response, but let's first check if component is still mounted\r\n        if (mounted) {\r\n          setData(response.data);\r\n        }\r\n      };\r\n      loadData();\r\n\r\n      return () => {\r\n        // When cleanup is called, toggle the mounted variable to false\r\n        mounted = false;\r\n      };\r\n    },\r\n    [url]\r\n  );\r\n\r\n  if (!data) {\r\n    return <div>Loading data from {url}</div>;\r\n  }\r\n\r\n  return <div class=\"row justify-content-center\"><BootstrapTable class=\"table table-bordered table-striped text-center\" bootstrap4   keyField='id' data={data} columns={ columns } />\r\n <button onClick={lightOn}>On</button>\r\n  </div>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}